package kursy;

import java.io.IOException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class Kurs {

	public static void main(String[] args) throws ParserConfigurationException, TransformerException{
		kursy();
	}
	public static void kursy() throws ParserConfigurationException, TransformerException{
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		DocumentBuilder builder =factory.newDocumentBuilder();
		List<Waluta> waluty = new ArrayList<Waluta>(); 
		try {
			URL url = new URL("http://rss.nbp.pl/kursy/xml2/2010/a/10a092.xml");
			URLConnection conn = url.openConnection();
		Document doc= builder.parse(conn.getInputStream());

		NodeList nazwy =doc.getElementsByTagName("pozycja");
		for (int i = 0; i < nazwy.getLength(); i++) {
			Node n =nazwy.item(i);
			if(n.getNodeType()==Node.ELEMENT_NODE){
				Element pozycja = (Element) n;
				NodeList wartosciPozycji = pozycja.getChildNodes();
				for (int j = 0; j < wartosciPozycji.getLength(); j++) {
					Node node = wartosciPozycji.item(j);
					if(node.getNodeType()==Node.ELEMENT_NODE){
						Element element = (Element)node;
						System.out.println(element);
					}
				}
			}
		}
		System.out.println(nazwy.item(4));
		} catch (SAXException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
